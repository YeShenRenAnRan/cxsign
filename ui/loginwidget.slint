
import { Icon } from "icon.slint";
import { LineEdit , Button, VerticalBox, HorizontalBox} from "std-widgets.slint";
component AccEdit {
    max-height: 32px;
    out property <string> acc <=> line-edit.text;
    HorizontalLayout{
        line-edit := LineEdit {
            placeholder-text: @tr("超星账号（手机号码）");
        }
    }
}
component PwdEdit{
    forward-focus: edit;
    max-height: 32px;
    out property <string> pwd <=> line-edit.text;
    edit:= HorizontalLayout{
        forward-focus: line-edit;
        line-edit := LineEdit {
            placeholder-text: @tr("你的密码");
            input-type : InputType.password;
        }
    }
    touch-area:= TouchArea {
        max-width: 32px;
        max-height: 32px;
        width: visiable-icon.width;
        height: visiable-icon.height;
        x: edit.width - touch-area.width - 10px;
        visiable-icon := Image {
        }
        clicked => {
            edit.focus();
        }
    }
    states [
        pressed when touch-area.pressed: {
            visiable-icon.source: @image-url("assets/icon/pwd-not-looking.svg");
            line-edit.input-type : InputType.text;
        }
        normal when !touch-area.pressed: {
            visiable-icon.source: @image-url("assets/icon/pwd-open-negative-filled.svg");
            line-edit.input-type : InputType.password;
        }
    ]
}
export component LoginWidget {
    callback clicked <=> button.clicked;
    out property <string> uname <=> acc.acc;
    out property <string> pwd <=> pwd.pwd;
    in property <bool> enabled: true;
    VerticalLayout {
        Icon { size: 64px; }
        VerticalBox { 
            acc:= AccEdit {}
            pwd:= PwdEdit {}
            HorizontalBox {
                alignment: center;
                button:= Button {
                    enabled: enabled;
                    max-height: 32px;
                    text: @tr("登录");
                }
            }
        }
    }
}